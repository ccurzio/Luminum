   Compiling LuminumServer v0.0.1 (/usr/src/Luminum/server)
error[E0583]: file not found for module `shared`
 --> src/shared.rs:1:1
  |
1 | pub mod shared;
  | ^^^^^^^^^^^^^^^
  |
  = help: to create the module `shared`, create file "src/shared/shared.rs" or "src/shared/shared/mod.rs"
  = note: if there is a `mod shared` elsewhere in the crate already, import it with `use crate::...` instead

error[E0583]: file not found for module `shared`
 --> src/setup.rs:1:1
  |
1 | mod shared;
  | ^^^^^^^^^^^
  |
  = help: to create the module `shared`, create file "src/setup/shared.rs" or "src/setup/shared/mod.rs"
  = note: if there is a `mod shared` elsewhere in the crate already, import it with `use crate::...` instead

error[E0433]: failed to resolve: use of undeclared crate or module `fs`
  --> src/shared.rs:26:2
   |
26 |     fs::metadata(path).is_ok()
   |     ^^ use of undeclared crate or module `fs`
   |
help: consider importing one of these items
   |
3  + use crate::fs;
   |
3  + use std::fs;
   |

error[E0425]: cannot find value `DPORT` in module `shared`
  --> src/setup.rs:61:46
   |
61 |         print!("Enter server port [{}]: ", shared::DPORT);
   |                                                    ^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DPORT;
   |
help: if you import `DPORT`, refer to it directly
   |
61 -         print!("Enter server port [{}]: ", shared::DPORT);
61 +         print!("Enter server port [{}]: ", DPORT);
   |

error[E0425]: cannot find value `DPORT` in module `shared`
  --> src/setup.rs:66:45
   |
66 |         let num = if ui_port.is_empty() { shared::DPORT }
   |                                                   ^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DPORT;
   |
help: if you import `DPORT`, refer to it directly
   |
66 -         let num = if ui_port.is_empty() { shared::DPORT }
66 +         let num = if ui_port.is_empty() { DPORT }
   |

error[E0425]: cannot find value `DKPATH` in module `shared`
  --> src/setup.rs:80:26
   |
80 |     if fs::metadata(shared::DKPATH).is_err() {
   |                             ^^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DKPATH;
   |
help: if you import `DKPATH`, refer to it directly
   |
80 -     if fs::metadata(shared::DKPATH).is_err() {
80 +     if fs::metadata(DKPATH).is_err() {
   |

error[E0425]: cannot find value `DKPATH` in module `shared`
  --> src/setup.rs:95:45
   |
95 |         println!("Wrote private key: {}", shared::DKPATH);
   |                                                   ^^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DKPATH;
   |
help: if you import `DKPATH`, refer to it directly
   |
95 -         println!("Wrote private key: {}", shared::DKPATH);
95 +         println!("Wrote private key: {}", DKPATH);
   |

error[E0425]: cannot find value `DPPATH` in module `shared`
  --> src/setup.rs:96:43
   |
96 |         println!("Wrote public key: {}",shared::DPPATH);
   |                                                 ^^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DPPATH;
   |
help: if you import `DPPATH`, refer to it directly
   |
96 -         println!("Wrote public key: {}",shared::DPPATH);
96 +         println!("Wrote public key: {}",DPPATH);
   |

error[E0425]: cannot find value `DCPATH` in module `shared`
  --> src/setup.rs:99:26
   |
99 |     if fs::metadata(shared::DCPATH).is_err() {
   |                             ^^^^^^ not found in `shared`
   |
help: consider importing this constant
   |
3  + use crate::shared::DCPATH;
   |
help: if you import `DCPATH`, refer to it directly
   |
99 -     if fs::metadata(shared::DCPATH).is_err() {
99 +     if fs::metadata(DCPATH).is_err() {
   |

error[E0425]: cannot find value `CFGKEY` in module `shared`
   --> src/setup.rs:104:35
    |
104 |     let sc = ShortCrypt::new(shared::CFGKEY);
    |                                      ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::CFGKEY;
    |
help: if you import `CFGKEY`, refer to it directly
    |
104 -     let sc = ShortCrypt::new(shared::CFGKEY);
104 +     let sc = ShortCrypt::new(CFGKEY);
    |

error[E0425]: cannot find value `CFGPATH` in module `shared`
   --> src/setup.rs:108:42
    |
108 |     let confconn = Connection::open(shared::CFGPATH).expect("Error: Could not initialize configuration database");
    |                                             ^^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::CFGPATH;
    |
help: if you import `CFGPATH`, refer to it directly
    |
108 -     let confconn = Connection::open(shared::CFGPATH).expect("Error: Could not initialize configuration database");
108 +     let confconn = Connection::open(CFGPATH).expect("Error: Could not initialize configuration database");
    |

error[E0425]: cannot find value `DKPATH` in module `shared`
   --> src/setup.rs:117:38
    |
117 |     println!("Private Key: {}", shared::DKPATH);
    |                                         ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DKPATH;
    |
help: if you import `DKPATH`, refer to it directly
    |
117 -     println!("Private Key: {}", shared::DKPATH);
117 +     println!("Private Key: {}", DKPATH);
    |

error[E0425]: cannot find value `DPPATH` in module `shared`
   --> src/setup.rs:118:37
    |
118 |     println!("Public Key: {}", shared::DPPATH);
    |                                        ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DPPATH;
    |
help: if you import `DPPATH`, refer to it directly
    |
118 -     println!("Public Key: {}", shared::DPPATH);
118 +     println!("Public Key: {}", DPPATH);
    |

error[E0425]: cannot find value `DCPATH` in module `shared`
   --> src/setup.rs:119:38
    |
119 |     println!("Certificate: {}", shared::DCPATH);
    |                                         ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DCPATH;
    |
help: if you import `DCPATH`, refer to it directly
    |
119 -     println!("Certificate: {}", shared::DCPATH);
119 +     println!("Certificate: {}", DCPATH);
    |

error[E0433]: failed to resolve: use of undeclared crate or module `process`
   --> src/setup.rs:120:2
    |
120 |     process::exit(0);
    |     ^^^^^^^ use of undeclared crate or module `process`
    |
help: consider importing one of these items
    |
3   + use crate::process;
    |
3   + use std::process;
    |

error[E0412]: cannot find type `Ipv4Addr` in this scope
   --> src/setup.rs:125:13
    |
125 |     ip.parse::<Ipv4Addr>().is_ok()
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
3   + use core::net::Ipv4Addr;
    |
3   + use std::net::Ipv4Addr;
    |

error[E0412]: cannot find type `Ipv6Addr` in this scope
   --> src/setup.rs:130:13
    |
130 |     ip.parse::<Ipv6Addr>().is_ok()
    |                ^^^^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
3   + use core::net::Ipv6Addr;
    |
3   + use std::net::Ipv6Addr;
    |

error[E0425]: cannot find value `DKPATH` in module `shared`
   --> src/setup.rs:138:41
    |
138 |     let mut keyfile = File::create(shared::DKPATH).expect("Could not create private key file");
    |                                            ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DKPATH;
    |
help: if you import `DKPATH`, refer to it directly
    |
138 -     let mut keyfile = File::create(shared::DKPATH).expect("Could not create private key file");
138 +     let mut keyfile = File::create(DKPATH).expect("Could not create private key file");
    |

error[E0425]: cannot find value `DPPATH` in module `shared`
   --> src/setup.rs:139:44
    |
139 |     let mut pubkeyfile = File::create(shared::DPPATH).expect("Could not create public key file");
    |                                               ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DPPATH;
    |
help: if you import `DPPATH`, refer to it directly
    |
139 -     let mut pubkeyfile = File::create(shared::DPPATH).expect("Could not create public key file");
139 +     let mut pubkeyfile = File::create(DPPATH).expect("Could not create public key file");
    |

error[E0425]: cannot find value `DKPATH` in module `shared`
   --> src/setup.rs:157:44
    |
157 |     let mut prv_key_file = File::open(shared::DKPATH).expect("Unable to open private key file");
    |                                               ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DKPATH;
    |
help: if you import `DKPATH`, refer to it directly
    |
157 -     let mut prv_key_file = File::open(shared::DKPATH).expect("Unable to open private key file");
157 +     let mut prv_key_file = File::open(DKPATH).expect("Unable to open private key file");
    |

error[E0425]: cannot find value `DPPATH` in module `shared`
   --> src/setup.rs:159:44
    |
159 |     let mut pub_key_file = File::open(shared::DPPATH).expect("Unable to open public key file");
    |                                               ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DPPATH;
    |
help: if you import `DPPATH`, refer to it directly
    |
159 -     let mut pub_key_file = File::open(shared::DPPATH).expect("Unable to open public key file");
159 +     let mut pub_key_file = File::open(DPPATH).expect("Unable to open public key file");
    |

error[E0425]: cannot find value `DCPATH` in module `shared`
   --> src/setup.rs:230:31
    |
230 |     match std::fs::write(shared::DCPATH, &cert_pem) {
    |                                  ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DCPATH;
    |
help: if you import `DCPATH`, refer to it directly
    |
230 -     match std::fs::write(shared::DCPATH, &cert_pem) {
230 +     match std::fs::write(DCPATH, &cert_pem) {
    |

error[E0425]: cannot find value `DCPATH` in module `shared`
   --> src/setup.rs:231:57
    |
231 |         Ok(_) => println!("Certificate written to {}",shared::DCPATH),
    |                                                               ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DCPATH;
    |
help: if you import `DCPATH`, refer to it directly
    |
231 -         Ok(_) => println!("Certificate written to {}",shared::DCPATH),
231 +         Ok(_) => println!("Certificate written to {}",DCPATH),
    |

error[E0425]: cannot find value `DIPATH` in module `shared`
   --> src/setup.rs:238:31
    |
238 |     match std::fs::write(shared::DIPATH, &pkcs12_der) {
    |                                  ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DIPATH;
    |
help: if you import `DIPATH`, refer to it directly
    |
238 -     match std::fs::write(shared::DIPATH, &pkcs12_der) {
238 +     match std::fs::write(DIPATH, &pkcs12_der) {
    |

error[E0425]: cannot find value `DIPATH` in module `shared`
   --> src/setup.rs:239:54
    |
239 |         Ok(_) => println!("Identity written to {}",shared::DIPATH),
    |                                                            ^^^^^^ not found in `shared`
    |
help: consider importing this constant
    |
3   + use crate::shared::DIPATH;
    |
help: if you import `DIPATH`, refer to it directly
    |
239 -         Ok(_) => println!("Identity written to {}",shared::DIPATH),
239 +         Ok(_) => println!("Identity written to {}",DIPATH),
    |

error[E0433]: failed to resolve: use of undeclared type `Identity`
   --> src/main.rs:181:23
    |
181 |     let identity = match Identity::from_pkcs12(&fs::read(identity_file).unwrap(), "PASSWORD_GOES_HERE") {
    |                          ^^^^^^^^ use of undeclared type `Identity`
    |
help: consider importing this struct
    |
5   + use native_tls::Identity;
    |

error[E0433]: failed to resolve: use of undeclared type `TlsAcceptor`
   --> src/main.rs:190:23
    |
190 |     let acceptor = match TlsAcceptor::new(identity) {
    |                          ^^^^^^^^^^^ use of undeclared type `TlsAcceptor`
    |
help: consider importing this struct
    |
5   + use native_tls::TlsAcceptor;
    |

error[E0412]: cannot find type `Value` in this scope
   --> src/main.rs:261:31
    |
261 |     match serde_json::from_str::<Value>(data) {
    |                                  ^^^^^ not found in this scope
    |
help: consider importing one of these items
    |
5   + use rusqlite::types::Value;
    |
5   + use serde_json::Value;
    |

warning: unused import: `params`
 --> src/setup.rs:9:16
  |
9 | use rusqlite::{params, Connection, Result};
  |                ^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: use of deprecated function `base64::encode`: Use Engine::encode
   --> src/setup.rs:106:30
    |
106 |     let encoded_crypt = base64::encode(&crypt_passphrase);
    |                                 ^^^^^^
    |
    = note: `#[warn(deprecated)]` on by default

warning: use of deprecated method `openssl::pkcs12::Pkcs12Builder::build`: Use Self::{name, pkey, cert, build2} instead.
   --> src/setup.rs:236:30
    |
236 |     let pkcs12 = pkcs12_builder.build(&ui_keypass,"Luminum Server Key",&prv_key, &certificate) .expect("Failed to build PKCS#12 structure");
    |                                 ^^^^^

warning: use of deprecated method `openssl::pkcs12::Pkcs12Builder::build`: Use Self::{name, pkey, cert, build2} instead.
   --> src/main.rs:379:30
    |
379 |     let pkcs12 = pkcs12_builder.build(&ui_keypass,"Luminum Server Key",&prv_key, &certificate) .expect("Failed to build PKCS#12 structure");
    |                                 ^^^^^

warning: unused variable: `prv_key`
   --> src/main.rs:283:6
    |
283 |     let prv_key = pkey.private_key_to_pem_pkcs8().unwrap();
    |         ^^^^^^^ help: if this is intentional, prefix it with an underscore: `_prv_key`
    |
    = note: `#[warn(unused_variables)]` on by default

Some errors have detailed explanations: E0412, E0425, E0433, E0583.
For more information about an error, try `rustc --explain E0412`.
warning: `LuminumServer` (bin "LuminumServer") generated 5 warnings
error: could not compile `LuminumServer` (bin "LuminumServer") due to 28 previous errors; 5 warnings emitted
